/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { Suspense, useRef } from "react";
import {
  OrbitControls,
  Preload,
  useGLTF,
  PerspectiveCamera,
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";

function Model(props) {
  const model = useGLTF("/gaming_desktop_pc/scene.gltf");
  return (
    <mesh position={[0, -2.5, -3]}>
      <hemisphereLight intensity={0.15} />
      <pointLight intensity={0.3} />
      <primitive object={model.scene} scale={1.5} />
    </mesh>
  );
}

export function CanvasModel() {
  return (
    <Canvas
      frameloop="demand"
      gl={{ preserveDrawingBuffer: true }}
      className="absolute flex-1 w-[1200px]"
    >
      <PerspectiveCamera makeDefault position={[5, 5, 15]} fov={70} />
      <Suspense>
        <OrbitControls
          enableZoom={false}
          maxPolarAngle={Math.PI / 2}
          minPolarAngle={Math.PI / 2}
          enablePan={false}
        />
      </Suspense>
      <Model />

      <Preload all />
    </Canvas>
  );
}
